//---------------------------------------------------------------------------
#pragma hdrstop


#include "uLanguageDefinition.h"
#include "uLanguageDefinitionSQL.h"
#include "uFormat.h"
#include <string>
#include <stdio.h>

using namespace SHEdit;

//---------------------------------------------------------------------------
#pragma package(smart_init)
//---------------------------------------------------------------------------
  LanguageDefinitionSQL::LanguageDefinitionSQL()
:  LanguageDefinition()
{
  foreground = clBlack;
  number = (TColor)0x008888;
  comment =clGreen;
  commentback =(TColor)0xddffdd;
  string =clRed;
  variable =clGray;
  reserved =clBlue;
  preprocessor =(TColor)0x55ff55;

  SetDefaultColor(&foreground);
  SetCaseSensitive(false);

  AddKeywords(L"A ADD AGENT AGGREGATE ARRAY ATTRIBUTE AUTHID AVG BFILE_BASE BINARY BLOB_BASE BLOCK BODY BOTH BOUND BULK BYTE C CALL CALLING CASCADE CHAR CHAR_BASE CHARACTER CHARSETFORM CHARSETID CHARSET CLOB_BASE CLOSE COLLECT COMMENT COMMIT COMMITTED COMPILED CONSTANT CONSTRUCTOR CONTEXT CONVERT COUNT CURSOR CUSTOMDATUM DANGLING DATA DATE DATE_BASE DAY DEFINE DETERMINISTIC DOUBLE DURATION ELEMENT ELSIF EMPTY ESCAPE EXCEPT EXCEPTIONS EXECUTE EXIT EXTERNAL FINAL FIXED FLOAT FORALL FORCE FUNCTION GENERAL HASH HEAP HIDDEN HOUR IMMEDIATE INCLUDING INDICATOR INDICES INFINITE INSTANTIABLE INT INTERFACE INTERVAL INVALIDATE ISOLATION JAVA LANGUAGE LARGE LEADING LENGTH LEVEL LIBRARY LIKE2 LIKE4 LIKEC LIMIT LIMITED LOCAL LONG LOOP MAP MAX MAXLEN MEMBER MERGE MIN MINUTE MOD MODIFY MONTH MULTISET NAME NAN NATIONAL NATIVE NCHAR NEW NOCOPY NUMBER_BASE OBJECT OCICOLL OCIDATETIME OCIDATE OCIDURATION OCIINTERVAL OCILOBLOCATOR OCINUMBER OCIRAW OCIREFCURSOR OCIREF OCIROWID OCISTRING OCITYPE ONLY OPAQUE OPEN OPERATOR ORACLE ORADATA ORGANIZATION ORLANY ORLVARY OTHERS OUT OVERRIDING PACKAGE PARALLEL_ENABLE PARAMETER PARAMETERS PARTITION PASCAL PIPE PIPELINED PRAGMA PRECISION PRIVATE RAISE RANGE RAW READ RECORD REF REFERENCE REM REMAINDER RENAME RESULT RETURN RETURNING REVERSE ROLLBACK ROW SAMPLE SAVE SAVEPOINT SB1 SB2 SB4 SECOND SEGMENT SELF SEPARATE SEQUENCE SERIALIZABLE SET SHORT SIZE_T SOME SPARSE SQLCODE SQLDATA SQLNAME SQLSTATE STANDARD STATIC STDDEV STORED STRING STRUCT STYLE SUBMULTISET SUBPARTITION SUBSTITUTABLE SUBTYPE SUM SYNONYM TDO THE TIME TIMESTAMP TIMEZONE_ABBR TIMEZONE_HOUR TIMEZONE_MINUTE TIMEZONE_REGION TRAILING TRANSAC TRANSACTIONAL TRUSTED TYPE UB1 UB2 UB4 UNDER UNSIGNED UNTRUSTED USE USING VALIST VALUE VARIABLE VARIANCE VARRAY VARYING VOID WHILE WORK WRAPPED WRITE YEAR ZONE ALL ALTER AND ANY ARRAY ARROW AS ASC AT BEGIN BETWEEN BY CASE CHECK CLUSTERS CLUSTER COLAUTH COLUMNS COMPRESS CONNECT CRASH CREATE CURRENT DECIMAL DECLARE DEFAULT DELETE DESC DISTINCT DROP ELSE END EXCEPTION EXCLUSIVE EXISTS FETCH FORM FOR FROM GOTO GRANT GROUP HAVING IDENTIFIED IF IN INDEXES INDEX INSERT INTERSECT INTO IS LIKE LOCK MINUS MODE NOCOMPRESS NOT NOWAIT NULL OF ON OPTION OR ORDER OVERLAPS PRIOR PROCEDURE PUBLIC RANGE RECORD RESOURCE REVOKE SELECT SHARE SIZE SQL START SUBTYPE TABAUTH TABLE THEN TO TYPE UNION UNIQUE UPDATE USE VALUES VIEW VIEWS WHEN WHERE WITH", new FontStyle(&reserved, NULL, TFontStyles() << fsBold));
  AddKeywords(L"ACCESS ADD ALL ALTER AND ANY AS ASC AUDIT BETWEEN BY CHAR CHECK CLUSTER COLUMN COLUMN_VALUE COMMENT COMPRESS CONNECT CREATE CURRENT DATE DECIMAL DEFAULT DELETE DESC DISTINCT DROP ELSE EXCLUSIVE EXISTS FILE FLOAT FOR FROM GRANT GROUP HAVING IDENTIFIED IMMEDIATE IN INCREMENT INDEX INITIAL INSERT INTEGER INTERSECT INTO IS LEVEL LIKE LOCK LONG MAXEXTENTS MINUS MLSLABEL MODE MODIFY NESTED_TABLE_ID NOAUDIT NOCOMPRESS NOT NOWAIT NULL NUMBER OF OFFLINE ON ONLINE OPTION OR ORDER PCTFREE PRIOR PRIVILEGES PUBLIC RAW RENAME RESOURCE REVOKE ROW ROWID ROWNUM ROWS SELECT SESSION SET SHARE SIZE SMALLINT START  SUCCESSFUL SYNONYM SYSDATE TABLE  THEN  TO  TRIGGER  UID UNION  UNIQUE  UPDATE  USER  VALIDATE VALUES  VARCHAR  VARCHAR2 VIEW WHENEVER  WHERE  WITH", new FontStyle(&reserved, NULL, TFontStyles() << fsBold));

  AddKeywords(L"1 2 3 4 5 6 7 8 9 0", new FontStyle(&number));

  FontStyle * commentstyle = new FontStyle(&comment, &commentback);
  TreeNode * commentTree = AddPair(L"/*", L"*/", commentstyle);
  AddJump(L"--", commentstyle, LangDefSpecType::LineTag, NULL, commentTree);
  AddJump(L"prompt", commentstyle, LangDefSpecType::LineTag, NULL, commentTree);

  AddKeywords(L"TODO", new FontStyle(&foreground), commentTree);

  AddWord(L":", new FontStyle(&variable, NULL, TFontStyles()));


  FontStyle * stringstyle = new FontStyle(&string);
  AddPair(L"'", L"'", stringstyle);
  AddPair(L"\"", L"\"", stringstyle);

}
